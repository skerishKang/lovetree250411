{"version":3,"file":"TreeDetail-C4mOGVDS.js","sources":["../../src/pages/TreeDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { fetchTreeById, updateTree } from '../features/trees/treeSlice';\r\nimport { selectUser } from '../features/auth/authSelectors';\r\nimport { addNotification } from '../features/notifications/notificationsSlice';\r\n\r\nconst TreeDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { currentTree, loading, error } = useSelector((state: RootState) => state.trees);\r\n  const user = useSelector(selectUser);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedTitle, setEditedTitle] = useState('');\r\n  const [editedDescription, setEditedDescription] = useState('');\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const [shareUrl, setShareUrl] = useState('');\r\n\r\n  // 좋아요/팔로우 중복 방지\r\n  const hasLiked = !!(user && currentTree?.likes?.includes(user._id));\r\n  const hasFollowed = !!(user && currentTree?.followers?.includes(user._id));\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      console.log('트리 상세 정보 조회 시도:', id);\r\n      dispatch(fetchTreeById(id) as any);\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    if (currentTree) {\r\n      setEditedTitle(currentTree.title);\r\n      setEditedDescription(currentTree.description);\r\n      setShareUrl(`${window.location.origin}/trees/${id}`);\r\n    }\r\n  }, [currentTree, id]);\r\n\r\n  const handleSave = async () => {\r\n    if (!currentTree) return;\r\n    \r\n    try {\r\n      await dispatch(updateTree({\r\n        id: currentTree._id,\r\n        title: editedTitle,\r\n        description: editedDescription,\r\n      }) as any);\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error('트리 정보 수정 실패:', error);\r\n    }\r\n  };\r\n\r\n  const handleShare = () => {\r\n    setShowShareModal(true);\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(shareUrl);\r\n    alert('URL이 클립보드에 복사되었습니다.');\r\n  };\r\n\r\n  const shareOnSocialMedia = (platform) => {\r\n    let url;\r\n    const encodedUrl = encodeURIComponent(shareUrl);\r\n    const encodedTitle = encodeURIComponent(currentTree.title);\r\n    \r\n    switch (platform) {\r\n      case 'twitter':\r\n        url = `https://twitter.com/intent/tweet?url=${encodedUrl}&text=${encodedTitle}`;\r\n        break;\r\n      case 'facebook':\r\n        url = `https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`;\r\n        break;\r\n      case 'kakao':\r\n        // 카카오톡 공유하기 API 구현\r\n        alert('카카오톡 공유 기능은 카카오 SDK 연동이 필요합니다.');\r\n        return;\r\n      case 'telegram':\r\n        url = `https://t.me/share/url?url=${encodedUrl}&text=${encodedTitle}`;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    window.open(url, '_blank');\r\n  };\r\n\r\n  // 좋아요 버튼 클릭 핸들러 (API 연동은 추후 구현)\r\n  const handleLike = () => {\r\n    if (!user || !currentTree || hasLiked) return;\r\n    // TODO: API 연동 필요. 임시로 프론트에서만 반영\r\n    currentTree.likes = [...(currentTree.likes || []), user._id];\r\n    // 알림 추가 (작성자 본인에게만)\r\n    if (currentTree.author?.id && user._id !== currentTree.author.id) {\r\n      dispatch(addNotification({\r\n        _id: `${currentTree.id}-like-${user._id}-${Date.now()}`,\r\n        type: 'like',\r\n        sender: user,\r\n        post: { _id: currentTree.id, content: currentTree.title },\r\n        read: false,\r\n        createdAt: new Date().toISOString()\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 팔로우 버튼 클릭 핸들러 (API 연동은 추후 구현)\r\n  const handleFollow = () => {\r\n    if (!user || !currentTree || hasFollowed) return;\r\n    // TODO: API 연동 필요. 임시로 프론트에서만 반영\r\n    currentTree.followers = [...(currentTree.followers || []), user._id];\r\n    // 알림 추가 (작성자 본인에게만)\r\n    if (currentTree.author?.id && user._id !== currentTree.author.id) {\r\n      dispatch(addNotification({\r\n        _id: `${currentTree.id}-follow-${user._id}-${Date.now()}`,\r\n        type: 'follow',\r\n        sender: user,\r\n        post: { _id: currentTree.id, content: currentTree.title },\r\n        read: false,\r\n        createdAt: new Date().toISOString()\r\n      }));\r\n    }\r\n  };\r\n\r\n  // 비공개 트리 접근 권한 체크\r\n  if (currentTree && currentTree.isPublic === false) {\r\n    // 비로그인 또는 작성자 본인이 아니면 접근 불가\r\n    if (!user || user._id !== (currentTree.author?.id || currentTree.author?._id)) {\r\n      return (\r\n        <div className=\"max-w-4xl mx-auto p-6\">\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded-lg\">\r\n            <h2 className=\"text-lg font-semibold mb-2\">비공개 트리입니다</h2>\r\n            <p className=\"mb-4\">이 트리는 작성자 본인만 볼 수 있습니다.</p>\r\n            <button \r\n              onClick={() => navigate('/trees')} \r\n              className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n            >\r\n              트리 목록으로 이동\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  // 로딩 상태 처리\r\n  if (loading === 'pending') {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        <div className=\"flex justify-center items-center min-h-[200px]\">\r\n          <div className=\"text-gray-600\">\r\n            <svg className=\"animate-spin h-8 w-8 text-gray-500 mr-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            트리 정보를 불러오는 중...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 에러 상태 처리\r\n  if (error) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded-lg\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">오류가 발생했습니다</h2>\r\n          <p className=\"mb-4\">{error}</p>\r\n          <button \r\n            onClick={() => navigate('/trees')} \r\n            className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n          >\r\n            트리 목록으로 이동\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 트리 데이터가 없는 경우 처리\r\n  if (!currentTree) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        <div className=\"bg-yellow-50 border border-yellow-200 text-yellow-700 p-4 rounded-lg\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">트리를 찾을 수 없습니다</h2>\r\n          <p className=\"mb-4\">요청하신 트리가 존재하지 않거나 삭제되었을 수 있습니다.</p>\r\n          <button \r\n            onClick={() => navigate('/trees')} \r\n            className=\"mt-2 px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\r\n          >\r\n            트리 목록으로 이동\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"tree-detail-container h-full min-h-screen w-full max-w-full p-2 sm:p-4 overflow-x-auto\">\r\n      <div className=\"bg-white rounded-lg shadow p-4 w-full max-w-3xl mx-auto flex flex-col gap-4\">\r\n        <div className=\"flex justify-between items-start mb-6\">\r\n          <div className=\"flex-grow\">\r\n            {isEditing ? (\r\n              <div>\r\n                <input\r\n                  type=\"text\"\r\n                  value={editedTitle}\r\n                  onChange={(e) => setEditedTitle(e.target.value)}\r\n                  className=\"w-full text-2xl font-bold mb-2 p-2 border rounded\"\r\n                />\r\n                <textarea\r\n                  value={editedDescription}\r\n                  onChange={(e) => setEditedDescription(e.target.value)}\r\n                  className=\"w-full h-32 p-2 border rounded text-gray-600\"\r\n                  placeholder=\"트리 설명을 입력하세요...\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold mb-2\">{currentTree.title}</h1>\r\n                <p className=\"text-gray-600\">{currentTree.description}</p>\r\n                {/* 태그 UI */}\r\n                {currentTree.tags && currentTree.tags.length > 0 && (\r\n                  <div className=\"mt-3 flex flex-wrap gap-2\">\r\n                    {currentTree.tags.map((tag: string) => (\r\n                      <button\r\n                        key={tag}\r\n                        onClick={() => navigate(`/trees?tag=${encodeURIComponent(tag)}`)}\r\n                        className=\"px-2 py-1 bg-blue-50 text-blue-600 rounded-full text-xs font-medium hover:bg-blue-100 transition-colors border border-blue-100\"\r\n                      >\r\n                        #{tag}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"text-sm text-gray-500 ml-4\">\r\n            {new Date(currentTree.createdAt).toLocaleDateString()}\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex gap-4\">\r\n          <button \r\n            onClick={() => navigate('/trees')}\r\n            className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors\"\r\n          >\r\n            목록으로 돌아가기\r\n          </button>\r\n          {isEditing ? (\r\n            <>\r\n              <button \r\n                onClick={handleSave}\r\n                className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors\"\r\n              >\r\n                저장하기\r\n              </button>\r\n              <button \r\n                onClick={() => setIsEditing(false)}\r\n                className=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition-colors\"\r\n              >\r\n                취소\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <button \r\n              onClick={() => setIsEditing(true)}\r\n              className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\r\n            >\r\n              트리 정보 수정하기\r\n            </button>\r\n          )}\r\n          <button \r\n            onClick={() => navigate(`/trees/${id}/edit`)}\r\n            className=\"px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600 transition-colors\"\r\n          >\r\n            트리 편집하기\r\n          </button>\r\n          <button \r\n            onClick={handleShare}\r\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 transition-colors\"\r\n          >\r\n            공유\r\n          </button>\r\n          {/* 좋아요 버튼 */}\r\n          <button\r\n            onClick={handleLike}\r\n            disabled={hasLiked || !user}\r\n            className={`px-4 py-2 rounded transition-colors duration-200 ${hasLiked ? 'bg-pink-200 text-pink-600' : 'bg-pink-500 text-white hover:bg-pink-600'}`}\r\n          >\r\n            ❤️ 좋아요 {currentTree.likes?.length || 0}\r\n          </button>\r\n          {/* 팔로우 버튼 */}\r\n          <button\r\n            onClick={handleFollow}\r\n            disabled={hasFollowed || !user}\r\n            className={`px-4 py-2 rounded transition-colors duration-200 ${hasFollowed ? 'bg-green-200 text-green-600' : 'bg-green-500 text-white hover:bg-green-600'}`}\r\n          >\r\n            {hasFollowed ? '팔로잉' : '팔로우'} {currentTree.followers?.length || 0}\r\n          </button>\r\n        </div>\r\n\r\n        {/* 공유 모달 */}\r\n        {showShareModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n            <div className=\"bg-white rounded-lg p-6 w-96\">\r\n              <div className=\"flex justify-between items-center mb-4\">\r\n                <h3 className=\"text-xl font-bold\">트리 공유하기</h3>\r\n                <button\r\n                  onClick={() => setShowShareModal(false)}\r\n                  className=\"text-gray-500 hover:text-gray-700\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  공유 URL\r\n                </label>\r\n                <div className=\"flex\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={shareUrl}\r\n                    readOnly\r\n                    className=\"flex-1 px-3 py-2 border rounded-l-md\"\r\n                  />\r\n                  <button\r\n                    onClick={copyToClipboard}\r\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-r-md hover:bg-blue-600\"\r\n                  >\r\n                    복사\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-center space-x-4\">\r\n                <button\r\n                  onClick={() => shareOnSocialMedia('twitter')}\r\n                  className=\"p-2 bg-blue-400 text-white rounded-full hover:bg-blue-500\"\r\n                >\r\n                  트위터\r\n                </button>\r\n                <button\r\n                  onClick={() => shareOnSocialMedia('facebook')}\r\n                  className=\"p-2 bg-blue-600 text-white rounded-full hover:bg-blue-700\"\r\n                >\r\n                  페이스북\r\n                </button>\r\n                <button\r\n                  onClick={() => shareOnSocialMedia('kakao')}\r\n                  className=\"p-2 bg-yellow-400 text-white rounded-full hover:bg-yellow-500\"\r\n                >\r\n                  카카오\r\n                </button>\r\n                <button\r\n                  onClick={() => shareOnSocialMedia('telegram')}\r\n                  className=\"p-2 bg-blue-500 text-white rounded-full hover:bg-blue-600\"\r\n                >\r\n                  텔레그램\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeDetail; "],"names":["TreeDetail","id","useParams","navigate","useNavigate","useLocation","dispatch","useDispatch","currentTree","loading","error","useSelector","state","user","selectUser","isEditing","setIsEditing","useState","editedTitle","setEditedTitle","editedDescription","setEditedDescription","showShareModal","setShowShareModal","shareUrl","setShareUrl","hasLiked","_a","hasFollowed","_b","useEffect","fetchTreeById","handleSave","updateTree","handleShare","copyToClipboard","shareOnSocialMedia","platform","url","encodedUrl","encodedTitle","handleLike","addNotification","handleFollow","_c","_d","jsxs","jsx","e","tag","Fragment","_e","_f"],"mappings":"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"}
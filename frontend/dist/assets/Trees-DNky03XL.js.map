{"version":3,"file":"Trees-DNky03XL.js","sources":["../../src/pages/Trees.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../app/store';\r\nimport { fetchTrees } from '../features/trees/treeSlice';\r\n\r\nconst Trees = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { trees, loading, error } = useSelector((state: RootState) => state.trees);\r\n\r\n  useEffect(() => {\r\n    console.log('트리 목록을 불러오는 중...');\r\n    dispatch(fetchTrees() as any)\r\n      .then(() => console.log('트리 목록 불러오기 성공'))\r\n      .catch((err: any) => console.error('트리 목록 불러오기 실패:', err));\r\n  }, [dispatch]);\r\n\r\n  // 로딩 상태 처리\r\n  if (loading === 'pending') {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        <div className=\"flex justify-center items-center min-h-[200px]\">\r\n          <div className=\"text-gray-600\">\r\n            <svg className=\"animate-spin h-8 w-8 text-gray-500 mr-2 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n            </svg>\r\n            트리 목록을 불러오는 중...\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 에러 상태 처리\r\n  if (error) {\r\n    return (\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        <div className=\"bg-red-50 border border-red-200 text-red-700 p-4 rounded-lg\">\r\n          <h2 className=\"text-lg font-semibold mb-2\">오류가 발생했습니다</h2>\r\n          <p className=\"mb-4\">{error}</p>\r\n          <button \r\n            onClick={() => dispatch(fetchTrees() as any)} \r\n            className=\"mt-2 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\r\n          >\r\n            다시 시도하기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"trees-container min-h-screen w-full max-w-full p-2 sm:p-4 overflow-x-auto\">\r\n      <div className=\"bg-white rounded-lg shadow p-4 w-full max-w-4xl mx-auto flex flex-col gap-4\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h1 className=\"text-2xl font-bold\">트리 목록</h1>\r\n          <button\r\n            onClick={() => navigate('/trees/create')}\r\n            className=\"px-4 py-2 bg-pink-500 text-white rounded hover:bg-pink-600 transition-colors\"\r\n          >\r\n            새 트리 만들기\r\n          </button>\r\n        </div>\r\n\r\n        {!trees || trees.length === 0 ? (\r\n          <div className=\"bg-yellow-50 border border-yellow-200 text-yellow-700 p-6 rounded-lg text-center\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">아직 생성된 트리가 없습니다</h2>\r\n            <p className=\"mb-4\">새로운 트리를 만들어보세요!</p>\r\n            <button\r\n              onClick={() => navigate('/trees/create')}\r\n              className=\"px-6 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-700 transition-colors\"\r\n            >\r\n              첫 번째 트리 만들기\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid gap-4\">\r\n            {trees.map((tree) => (\r\n              <div\r\n                key={tree._id}\r\n                className=\"bg-white shadow-lg rounded-lg overflow-hidden hover:shadow-xl transition-shadow\"\r\n              >\r\n                <div className=\"p-6\">\r\n                  <div className=\"flex justify-between items-start mb-4\">\r\n                    <div>\r\n                      <h2 className=\"text-xl font-semibold mb-2\">{tree.title}</h2>\r\n                      <p className=\"text-gray-600\">{tree.description}</p>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      {new Date(tree.createdAt).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <div className=\"text-sm text-gray-500\">\r\n                      <span className=\"font-medium\">ID:</span> {tree._id}\r\n                    </div>\r\n                    <div className=\"flex gap-2\">\r\n                      <Link\r\n                        to={`/trees/${tree._id}`}\r\n                        className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors text-sm\"\r\n                      >\r\n                        자세히 보기\r\n                      </Link>\r\n                      <Link\r\n                        to={`/trees/${tree._id}/edit`}\r\n                        className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition-colors text-sm\"\r\n                      >\r\n                        편집하기\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Trees; "],"names":["Trees","navigate","useNavigate","dispatch","useDispatch","trees","loading","error","useSelector","state","useEffect","fetchTrees","err","jsx","jsxs","tree","Link"],"mappings":"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"}